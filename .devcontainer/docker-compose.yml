version: '3.8'

services:
  # 应用服务 (Go + Vue 开发环境)
  app:
    # 使用 .devcontainer/Dockerfile 构建镜像
    build:
      context: .
      dockerfile: .devcontainer/Dockerfile
      args:
        # 可以在这里修改 Go 和 Node.js 的版本
        GO_VERSION: "1.21"
        NODE_VERSION: "18"
    
    # 将本地代码挂载到容器的工作目录
    # :cached 选项可以提升在 macOS 上的性能
    volumes:
      - .:/workspace:cached

    # 覆盖容器默认的启动命令，让容器保持运行状态
    command: sleep infinity

    # 设置环境变量
    environment:
      # 数据库连接信息
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=myuser
      - DB_PASSWORD=mypassword
      - DB_NAME=mydatabase
      # Redis 连接信息
      - REDIS_HOST=redis
      - REDIS_PORT=6379

    # 依赖于数据库和 Redis 服务，确保它们先于 app 启动
    depends_on:
      - db
      - redis

  # MySQL 数据库服务
  db:
    image: mysql:8.0
    container_name: dev-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # MySQL root 用户密码
      MYSQL_DATABASE: mydatabase      # 初始化时创建的数据库名
      MYSQL_USER: myuser              # 创建的普通用户名
      MYSQL_PASSWORD: mypassword      # 普通用户的密码
    ports:
      # 将容器的 3306 端口映射到主机的 3306 端口
      - "3306:3306"
    volumes:
      # 将数据持久化到本地，防止容器重启后数据丢失
      - mysql-data:/var/lib/mysql

  # Redis 服务
  redis:
    image: redis:7.0-alpine
    container_name: dev-redis
    restart: unless-stopped
    ports:
      # 将容器的 6379 端口映射到主机的 6379 端口
      - "6379:6379"
    volumes:
      # 数据持久化
      - redis-data:/data

# 定义数据卷，用于持久化存储
volumes:
  mysql-data:
  redis-data:

